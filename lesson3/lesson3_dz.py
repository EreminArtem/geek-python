# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def divide(num1, num2):
    if num2 == 0:
        print("Нельзя делить на ноль")
        return
    return num1 / num2


def divide_numbers():
    print(divide(
        int(input("Введите число: ")),
        int(input("Введите второе число: "))
    ))


# divide_numbers()


# 2. Реализовать функцию, принимающую несколько параметров,
# описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

def user_info(
        name,
        surname,
        birthday_year,
        city,
        email,
        phone
):
    return f"{name} {surname}, {birthday_year}, {city}, {email}, {phone}"


user = user_info(name="rick", surname="sunchez", birthday_year=1940, city="chicago", email="rick@gmail.com",
                 phone="555-555")


# print(user)

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.

def my_func(num1, num2, num3):
    summ = num1 + num2 + num3
    max_number = max(num1, num2, num3)
    min_number = min(num1, num2, num3)

    return max_number + (summ - max_number - min_number)


# print(my_func(4, 6, 5))

# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y.
# Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# ** Подсказка:** попробуйте решить задачу двумя способами.
# Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **,
# предусматривающая использование цикла.

def my_pow(x, y):
    return x ** y


def my_pow1(x, y):
    summ = x
    while y > 1:
        summ *= x
        y -= 1
    return summ


# print(my_func(4, 5))
# print(my_func1(4, 5))
# print(pow(4, 5))


# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел,
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

def numbers():
    is_stopped = False
    acc = 0
    while is_stopped is False:
        answer = input('Введите числа через пробел или $ чтобы остановиться')
        for i in answer.split():
            if i == '$':
                is_stopped = True
                break
            acc += int(i)
        print(acc)


# numbers()


# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки,
# но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().

def capitalize_word(word):
    return word.capitalize()


def capitalize_words(*words):
    return list(map(capitalize_word, words[0]))


text = input('Введите текст: ')
r = capitalize_words(text.split())

print(' '.join(capitalize_words(text.split())))
